swagger.title=JEJU-YEORA Backend API
swagger.version=v1.0
swagger.description=API specification for Jeju Yeora service.
swagger.contact.name=JEJU-YEORA Dev Team
swagger.contact.url=https://www.instagram.com/jeju_yeora

api.response.ok=Successful response.
api.response.fail=Failed response.
api.response.error=Server error occurred.
api.response.redirect=Forwarding successful.
api.response.authorized=Authentication succeeded.
api.response.unauthorized=Authentication failed.
api.response.forbidden=Access is denied.
api.response.jwt.expired=Token has expired.
api.response.jwt.invalid=Invalid token.
api.response.bad.input=Invalid input data.
api.response.bad.request=Invalid request parameter.

tag.welcome.name=Welcome
tag.welcome.description=Default response on root access
api.home.summary=Root forwarding (default response instead of 403/404)
api.home.description=When ‘/’ is requested, returns HTTP 200 and forwards to /welcome
api.welcome.summary=Retrieve multilingual welcome message
api.welcome.description=Returns a greeting based on the Accept-Language header.

api.auth.summary=Login
api.auth.description=Authenticate ID/PW and return JWT

welcome=Welcome : {0}

# DemoController – Insert
api.demo.insert.summary=Create new demo
api.demo.insert.description=Save a new demo based on the data provided in DemoRequest DTO
api.demo.insert.responses.ok=Insert successful
api.demo.insert.responses.bad_request=Invalid request
api.demo.insert.responses.error=Server error

# DemoController – SelectAll
api.demo.selectAll.summary=Retrieve all demos
api.demo.selectAll.description=Return a list of all saved demos
api.demo.selectAll.responses.ok=Query successful
api.demo.selectAll.responses.error=Server error

# DemoController – SelectById
api.demo.selectById.summary=Retrieve demo by ID
api.demo.selectById.description=Return the demo corresponding to the given PathVariable ID
api.demo.selectById.responses.ok=Query successful
api.demo.selectById.responses.bad_request=Invalid ID
api.demo.selectById.responses.not_found=Demo not found
api.demo.selectById.responses.error=Server error

# DemoController – UpdateById
api.demo.updateById.summary=Update demo
api.demo.updateById.description=Update the demo identified by PathVariable ID with the provided RequestBody data
api.demo.updateById.responses.ok=Update successful
api.demo.updateById.responses.bad_request=Invalid ID or request
api.demo.updateById.responses.not_found=Demo does not exist
api.demo.updateById.responses.error=Server error

# DemoController – DeleteById
api.demo.deleteById.summary=Delete demo
api.demo.deleteById.description=Delete the demo identified by the given PathVariable ID
api.demo.deleteById.responses.ok=Deletion successful
api.demo.deleteById.responses.bad_request=Invalid ID
api.demo.deleteById.responses.not_found=Demo does not exist
api.demo.deleteById.responses.error=Server error

# ItemController – Insert
api.item.insert.summary=Insert new item
api.item.insert.description=Save a new item based on CommonRequest DTO
api.item.insert.responses.ok=Insert success
api.item.insert.responses.bad_request=Invalid request
api.item.insert.responses.error=Server error

# ItemController – SelectAll
api.item.selectAll.summary=Get all items
api.item.selectAll.description=Return all registered items
api.item.selectAll.responses.ok=Select success
api.item.selectAll.responses.error=Server error

# ItemController – SelectById
api.item.selectById.summary=Get item by ID
api.item.selectById.description=Return the item for given ID
api.item.selectById.responses.ok=Select success
api.item.selectById.responses.bad_request=Invalid ID
api.item.selectById.responses.not_found=Item not found
api.item.selectById.responses.error=Server error

# ItemController – UpdateById
api.item.updateById.summary=Update item
api.item.updateById.description=Modify the item for given ID
api.item.updateById.responses.ok=Update success
api.item.updateById.responses.bad_request=Invalid ID or request
api.item.updateById.responses.not_found=Item not found
api.item.updateById.responses.error=Server error

# ItemController – DeleteById
api.item.deleteById.summary=Delete item
api.item.deleteById.description=Delete the item for given ID
api.item.deleteById.responses.ok=Delete success
api.item.deleteById.responses.bad_request=Invalid ID
api.item.deleteById.responses.not_found=Item not found
api.item.deleteById.responses.error=Server error

# MemberController – Insert
api.member.insert.summary=Insert new user
api.member.insert.description=Save a new user based on CommonRequest DTO
api.member.insert.responses.ok=Insert success
api.member.insert.responses.bad_request=Invalid request
api.member.insert.responses.error=Server error

# MemberController – SelectAll
api.member.selectAll.summary=Get all users
api.member.selectAll.description=Return all registered users
api.member.selectAll.responses.ok=Select success
api.member.selectAll.responses.error=Server error

# MemberController – SelectById
api.member.selectById.summary=Get user by ID
api.member.selectById.description=Return the user for given ID
api.member.selectById.responses.ok=Select success
api.member.selectById.responses.bad_request=Invalid ID
api.member.selectById.responses.not_found=User not found
api.member.selectById.responses.error=Server error

# MemberController – UpdateById
api.member.updateById.summary=Update user
api.member.updateById.description=Modify the user for given ID
api.member.updateById.responses.ok=Update success
api.member.updateById.responses.bad_request=Invalid ID or request
api.member.updateById.responses.not_found=User not exists
api.member.updateById.responses.error=Server error

# MemberController – DeleteById
api.member.deleteById.summary=Delete user
api.member.deleteById.description=Delete the user for given ID
api.member.deleteById.responses.ok=Delete success
api.member.deleteById.responses.bad_request=Invalid ID
api.member.deleteById.responses.not_found=User not exists
api.member.deleteById.responses.error=Server error
