swagger.title=济州-YEORA 后端 API。
swagger.version=v1.0
swagger.description=济州-YEORA 服务的后端 API 规范。
swagger.contact.name=济州-YEORA 开发团队。
swagger.contact.url=https://www.instagram.com/jeju_yeora

api.response.ok=请求成功。
api.response.fail=请求失败。
api.response.error=服务器错误。
api.response.redirect=重定向成功。
api.response.authorized=认证成功。
api.response.unauthorized=认证失败。
api.response.forbidden=访问被拒绝。
api.response.jwt.expired=令牌已过期。
api.response.jwt.invalid=无效的令牌。
api.response.bad.input=无效的输入数据。
api.response.bad.request=无效的请求参数。

tag.welcome.name=欢迎
tag.welcome.description=根路径访问时的默认响应
api.home.summary=根路径转发（替代 403/404 的默认响应）
api.home.description=当请求 "/" 时，返回 HTTP 200 并转发到 /welcome
api.welcome.summary=获取多语言欢迎消息
api.welcome.description=根据 Accept-Language 头返回相应的问候语

api.auth.summary=登录
api.auth.description=验证 ID/密码并返回 JWT

welcome=欢迎 : {0}。

# DemoController – Insert
api.demo.insert.summary=创建新示例。
api.demo.insert.description=根据 DemoRequest DTO 提供的数据保存新示例。
api.demo.insert.responses.ok=创建成功。
api.demo.insert.responses.bad_request=无效的请求。
api.demo.insert.responses.error=服务器错误。

# DemoController – SelectAll
api.demo.selectAll.summary=获取所有示例。
api.demo.selectAll.description=返回所有已保存示例的列表。
api.demo.selectAll.responses.ok=查询成功。
api.demo.selectAll.responses.error=服务器错误。

# DemoController – SelectById
api.demo.selectById.summary=根据 ID 获取示例。
api.demo.selectById.description=返回与所给 PathVariable ID 对应的示例。
api.demo.selectById.responses.ok=查询成功。
api.demo.selectById.responses.bad_request=无效的 ID。
api.demo.selectById.responses.not_found=未找到示例。
api.demo.selectById.responses.error=服务器错误。

# DemoController – UpdateById
api.demo.updateById.summary=更新示例。
api.demo.updateById.description=使用提供的 RequestBody 数据更新由 PathVariable ID 指定的示例。
api.demo.updateById.responses.ok=更新成功。
api.demo.updateById.responses.bad_request=无效的 ID 或请求。
api.demo.updateById.responses.not_found=示例不存在。
api.demo.updateById.responses.error=服务器错误。

# DemoController – DeleteById
api.demo.deleteById.summary=删除示例。
api.demo.deleteById.description=删除由给定 PathVariable ID 指定的示例。
api.demo.deleteById.responses.ok=删除成功。
api.demo.deleteById.responses.bad_request=无效的 ID。
api.demo.deleteById.responses.not_found=示例不存在。
api.demo.deleteById.responses.error=服务器错误。

# ItemController – Insert
api.item.insert.summary=新增项目。
api.item.insert.description=根据 CommonRequest DTO 保存新的项目。
api.item.insert.responses.ok=创建成功。
api.item.insert.responses.bad_request=请求无效。
api.item.insert.responses.error=服务器错误。

# ItemController – SelectAll
api.item.selectAll.summary=获取所有项目。
api.item.selectAll.description=返回所有已注册的项目列表。
api.item.selectAll.responses.ok=查询成功。
api.item.selectAll.responses.error=服务器错误。

# ItemController – SelectById
api.item.selectById.summary=按ID获取项目。
api.item.selectById.description=返回指定 ID 的项目。
api.item.selectById.responses.ok=查询成功。
api.item.selectById.responses.bad_request=无效的 ID。
api.item.selectById.responses.not_found=项目未找到。
api.item.selectById.responses.error=服务器错误。

# ItemController – UpdateById
api.item.updateById.summary=更新项目。
api.item.updateById.description=根据指定 ID 和请求体修改项目。
api.item.updateById.responses.ok=更新成功。
api.item.updateById.responses.bad_request=无效的 ID 或请求。
api.item.updateById.responses.not_found=项目未找到。
api.item.updateById.responses.error=服务器错误。

# ItemController – DeleteById
api.item.deleteById.summary=删除项目。
api.item.deleteById.description=删除指定 ID 的项目。
api.item.deleteById.responses.ok=删除成功。
api.item.deleteById.responses.bad_request=无效的 ID。
api.item.deleteById.responses.not_found=项目未找到。
api.item.deleteById.responses.error=服务器错误。

# MemberController – Insert
api.member.insert.summary=新增用户。
api.member.insert.description=根据 CommonRequest DTO 保存新的用户。
api.member.insert.responses.ok=注册成功。
api.member.insert.responses.bad_request=请求无效。
api.member.insert.responses.error=服务器错误。

# MemberController – SelectAll
api.member.selectAll.summary=获取所有用户。
api.member.selectAll.description=返回所有已注册的用户列表。
api.member.selectAll.responses.ok=查询成功。
api.member.selectAll.responses.error=服务器错误。

# MemberController – SelectById
api.member.selectById.summary=按ID获取用户。
api.member.selectById.description=返回指定 ID 的用户。
api.member.selectById.responses.ok=查询成功。
api.member.selectById.responses.bad_request=无效的 ID。
api.member.selectById.responses.not_found=未找到用户。
api.member.selectById.responses.error=服务器错误。

# MemberController – UpdateById
api.member.updateById.summary=更新用户。
api.member.updateById.description=根据指定 ID 和请求体修改用户。
api.member.updateById.responses.ok=更新成功。
api.member.updateById.responses.bad_request=无效的 ID 或请求。
api.member.updateById.responses.not_found=未找到用户。
api.member.updateById.responses.error=服务器错误。

# MemberController – DeleteById
api.member.deleteById.summary=删除用户。
api.member.deleteById.description=删除指定 ID 的用户。
api.member.deleteById.responses.ok=删除成功。
api.member.deleteById.responses.bad_request=无效的 ID。
api.member.deleteById.responses.not_found=未找到用户。
api.member.deleteById.responses.error=服务器错误。

# DeviceController - Insert
api.device.insert.summary=注册新的通知令牌。
api.device.insert.description=根据通过 CommonRequest DTO 提供的数据保存新的通知令牌。
api.device.insert.responses.ok=注册成功。
api.device.insert.responses.bad_request=错误的请求。
api.device.insert.responses.error=服务器错误。

# DeviceController - SelectAll
api.device.selectAll.summary=查询所有通知令牌。
api.device.selectAll.description=返回所有已注册的通知令牌列表。
api.device.selectAll.responses.ok=查询成功。
api.device.selectAll.responses.error=服务器错误。

# DeviceController - SelectById
api.device.selectById.summary=按ID查询通知令牌。
api.device.selectById.description=返回通过 PathVariable 提供的 ID 对应的通知令牌。
api.device.selectById.responses.ok=查询成功。
api.device.selectById.responses.bad_request=无效的ID。
api.device.selectById.responses.not_found=未找到通知令牌。
api.device.selectById.responses.error=服务器错误。

# DeviceController - UpdateById
api.device.updateById.summary=修改通知令牌。
api.device.updateById.description=使用 RequestBody 提供的数据，修改通过 PathVariable 提供的 ID 的通知令牌。
api.device.updateById.responses.ok=修改成功。
api.device.updateById.responses.bad_request=无效的ID或请求。
api.device.updateById.responses.not_found=通知令牌不存在。
api.device.updateById.responses.error=服务器错误。

# DeviceController - DeleteById
api.device.deleteById.summary=删除通知令牌。
api.device.deleteById.description=删除通过 PathVariable 提供的 ID 的通知令牌。
api.device.deleteById.responses.ok=删除成功。
api.device.deleteById.responses.bad_request=无效的ID。
api.device.deleteById.responses.not_found=通知令牌不存在。
api.device.deleteById.responses.error=服务器错误。

# ===== 实体 =====
api.operations.entity.welcome=欢迎 API
api.operations.entity.auth=认证 API
api.operations.entity.demo=演示 API
api.operations.entity.item=项目 API
api.operations.entity.cachedItem=缓存项目 API
api.operations.entity.device=设备 API
api.operations.entity.member=用户 API

# ===== 通用 CRUD =====
api.operations.select.summary=查询 {0}。
api.operations.select.description=查询 {0}。
api.operations.select.responses.ok={0} 查询成功。
api.operations.select.responses.not_found=未找到 {0}。
api.operations.select.responses.error=服务器错误。

api.operations.insert.summary=新增 {0}。
api.operations.insert.description=新增 {0}。
api.operations.insert.responses.ok={0} 已成功新增。
api.operations.insert.responses.bad_request=无效请求。
api.operations.insert.responses.error=服务器错误。

api.operations.update.summary=更新 {0}。
api.operations.update.description=更新 {0} 信息。
api.operations.update.responses.ok={0} 更新成功。
api.operations.update.responses.bad_request=无效的 ID 或请求。
api.operations.update.responses.not_found=未找到需要更新的 {0}。
api.operations.update.responses.error=服务器错误

api.operations.delete.summary=删除 {0}。
api.operations.delete.description=删除 {0}。
api.operations.delete.responses.ok={0} 删除成功。
api.operations.delete.responses.not_found=未找到需要删除的 {0}。
api.operations.delete.responses.error=服务器错误。
