swagger.title=제주여라 백엔드 API
swagger.version=v1.0
swagger.description=제주여라 서비스의 백엔드 API 명세입니다.
swagger.contact.name=제주여라 개발팀
swagger.contact.url=https://www.instagram.com/jeju_yeora

api.response.ok=요청에 성공했습니다
api.response.fail=요청에 실패했습니다
api.response.error=서버 오류가 발생했습니다.
api.response.redirect=포워딩 성공했습니다
api.response.authorized=인증에 성공했습니다
api.response.unauthorized=인증에 실패했습니다.
api.response.forbidden=접근이 거부되었습니다.
api.response.jwt.expired=토큰이 만료되었습니다.
api.response.jwt.invalid=유효하지 않은 토큰입니다.
api.response.bad.input=유효하지 않은 입력 데이터입니다.
api.response.bad.request=유효하지 않은 요청 파라미터입니다.

tag.welcome.name=환영
tag.welcome.description=루트 접근 시 기본 응답
api.home.summary=루트 포워딩(403/404 대신 기본 응답)
api.home.description="/" 요청 시 HTTP 200을 반환하고 /welcome으로 포워딩함
api.welcome.summary=다국어 환영 메시지 조회
api.welcome.description=Accept-Language 헤더에 따라 해당 인사말을 반환함

api.auth.summary=로그인
api.auth.description=ID/비밀번호를 인증하고 JWT를 반환함

welcome=반갑습니다 : {0}

# DemoController – Insert
api.demo.insert.summary=새 데모 등록
api.demo.insert.description=DemoRequest DTO로 전달된 데이터를 기반으로 새 데모를 저장함
api.demo.insert.responses.ok=등록 성공
api.demo.insert.responses.bad_request=잘못된 요청
api.demo.insert.responses.error=서버 에러

# DemoController – SelectAll
api.demo.selectAll.summary=모든 데모 조회
api.demo.selectAll.description=등록된 모든 데모 목록을 반환함
api.demo.selectAll.responses.ok=조회 성공
api.demo.selectAll.responses.error=서버 에러

# DemoController – SelectById
api.demo.selectById.summary=ID로 데모 조회
api.demo.selectById.description=PathVariable로 전달된 ID의 데모를 반환함
api.demo.selectById.responses.ok=조회 성공
api.demo.selectById.responses.bad_request=잘못된 ID
api.demo.selectById.responses.not_found=데모 없음
api.demo.selectById.responses.error=서버 에러

# DemoController – UpdateById
api.demo.updateById.summary=데모 수정
api.demo.updateById.description=PathVariable로 전달된 ID의 데모를, RequestBody로 전달된 데이터로 수정함
api.demo.updateById.responses.ok=수정 성공
api.demo.updateById.responses.bad_request=잘못된 ID 또는 요청
api.demo.updateById.responses.not_found=데모가 존재하지 않음
api.demo.updateById.responses.error=서버 에러

# DemoController – DeleteById
api.demo.deleteById.summary=데모 삭제
api.demo.deleteById.description=PathVariable로 전달된 ID의 데모를 삭제함
api.demo.deleteById.responses.ok=삭제 성공
api.demo.deleteById.responses.bad_request=잘못된 ID
api.demo.deleteById.responses.not_found=데모가 존재하지 않음
api.demo.deleteById.responses.error=서버 에러

# ItemController – Insert
api.item.insert.summary=새 아이템 등록
api.item.insert.description=CommonRequest DTO로 전달된 데이터를 기반으로 새 아이템을 저장함
api.item.insert.responses.ok=등록 성공
api.item.insert.responses.bad_request=잘못된 요청
api.item.insert.responses.error=서버 에러

# ItemController – SelectAll
api.item.selectAll.summary=모든 아이템 조회
api.item.selectAll.description=등록된 모든 아이템 목록을 반환함
api.item.selectAll.responses.ok=조회 성공
api.item.selectAll.responses.error=서버 에러

# ItemController – SelectById
api.item.selectById.summary=ID로 아이템 조회
api.item.selectById.description=PathVariable로 전달된 ID의 아이템을 반환함
api.item.selectById.responses.ok=조회 성공
api.item.selectById.responses.bad_request=잘못된 ID
api.item.selectById.responses.not_found=아이템 없음
api.item.selectById.responses.error=서버 에러

# ItemController – UpdateById
api.item.updateById.summary=아이템 수정
api.item.updateById.description=PathVariable로 전달된 ID의 아이템을, RequestBody로 전달된 데이터로 수정함
api.item.updateById.responses.ok=수정 성공
api.item.updateById.responses.bad_request=잘못된 ID 또는 요청
api.item.updateById.responses.not_found=아이템 없음
api.item.updateById.responses.error=서버 에러

# ItemController – DeleteById
api.item.deleteById.summary=아이템 삭제
api.item.deleteById.description=PathVariable로 전달된 ID의 아이템을 삭제함
api.item.deleteById.responses.ok=삭제 성공
api.item.deleteById.responses.bad_request=잘못된 ID
api.item.deleteById.responses.not_found=아이템 없음
api.item.deleteById.responses.error=서버 에러

# MemberController – Insert
api.member.insert.summary=새 사용자 등록
api.member.insert.description=CommonRequest DTO로 전달된 데이터를 기반으로 새 사용자를 저장함
api.member.insert.responses.ok=등록 성공
api.member.insert.responses.bad_request=잘못된 요청
api.member.insert.responses.error=서버 에러

# MemberController – SelectAll
api.member.selectAll.summary=모든 사용자 조회
api.member.selectAll.description=등록된 모든 사용자 목록을 반환함
api.member.selectAll.responses.ok=조회 성공
api.member.selectAll.responses.error=서버 에러

# MemberController – SelectById
api.member.selectById.summary=ID로 사용자 조회
api.member.selectById.description=PathVariable로 전달된 ID의 사용자를 반환함
api.member.selectById.responses.ok=조회 성공
api.member.selectById.responses.bad_request=잘못된 ID
api.member.selectById.responses.not_found=사용자 없음
api.member.selectById.responses.error=서버 에러

# MemberController – UpdateById
api.member.updateById.summary=사용자 수정
api.member.updateById.description=PathVariable로 전달된 ID의 사용자를, RequestBody로 전달된 데이터로 수정함
api.member.updateById.responses.ok=수정 성공
api.member.updateById.responses.bad_request=잘못된 ID 또는 요청
api.member.updateById.responses.not_found=사용자가 존재하지 않음
api.member.updateById.responses.error=서버 에러

# MemberController – DeleteById
api.member.deleteById.summary=사용자 삭제
api.member.deleteById.description=PathVariable로 전달된 ID의 사용자를 삭제함
api.member.deleteById.responses.ok=삭제 성공
api.member.deleteById.responses.bad_request=잘못된 ID
api.member.deleteById.responses.not_found=사용자가 존재하지 않음
api.member.deleteById.responses.error=서버 에러

# DeviceController – Insert
api.device.insert.summary=새 알림 토큰 등록
api.device.insert.description=CommonRequest DTO로 전달된 데이터를 기반으로 새 알림 토큰을 저장함
api.device.insert.responses.ok=등록 성공
api.device.insert.responses.bad_request=잘못된 요청
api.device.insert.responses.error=서버 에러

# DeviceController – SelectAll
api.device.selectAll.summary=모든 알림 토큰 조회
api.device.selectAll.description=등록된 모든 알림 토큰 목록을 반환함
api.device.selectAll.responses.ok=조회 성공
api.device.selectAll.responses.error=서버 에러

# DeviceController – SelectById
api.device.selectById.summary=ID로 알림 토큰 조회
api.device.selectById.description=PathVariable로 전달된 ID의 알림 토큰을 반환함
api.device.selectById.responses.ok=조회 성공
api.device.selectById.responses.bad_request=잘못된 ID
api.device.selectById.responses.not_found=알림 토큰 없음
api.device.selectById.responses.error=서버 에러

# DeviceController – UpdateById
api.device.updateById.summary=알림 토큰 수정
api.device.updateById.description=PathVariable로 전달된 ID의 알림 토큰을, RequestBody로 전달된 데이터로 수정함
api.device.updateById.responses.ok=수정 성공
api.device.updateById.responses.bad_request=잘못된 ID 또는 요청
api.device.updateById.responses.not_found=알림 토큰이 존재하지 않음
api.device.updateById.responses.error=서버 에러

# DeviceController – DeleteById
api.device.deleteById.summary=알림 토큰 삭제
api.device.deleteById.description=PathVariable로 전달된 ID의 알림 토큰을 삭제함
api.device.deleteById.responses.ok=삭제 성공
api.device.deleteById.responses.bad_request=잘못된 ID
api.device.deleteById.responses.not_found=알림 토큰이 존재하지 않음
api.device.deleteById.responses.error=서버 에러

# ===== Entity =====
api.operations.entity.welcome=환영 API
api.operations.entity.auth=인증 API
api.operations.entity.demo=데모 API
api.operations.entity.item=아이템 API
api.operations.entity.cachedItem=캐시 아이템 API
api.operations.entity.device=디바이스 API
api.operations.entity.member=사용자 API

# ===== CRUD 공통 =====
api.operations.select.summary={0} 조회
api.operations.select.description={0} 을(를) 조회합니다.
api.operations.select.responses.ok={0} 조회 성공
api.operations.select.responses.not_found={0} 을(를) 찾을 수 없음
api.operations.select.responses.error=서버 에러

api.operations.insert.summary={0} 등록
api.operations.insert.description={0} 을(를) 등록합니다.
api.operations.insert.responses.ok={0} 등록 성공하였습니다.
api.operations.insert.responses.bad_request=잘못된 요청
api.operations.insert.responses.error=서버 에러

api.operations.update.summary={0} 수정
api.operations.update.description={0} 정보를 수정합니다.
api.operations.update.responses.ok={0} 수정 성공
api.operations.update.responses.bad_request=잘못된 ID 또는 요청
api.operations.update.responses.not_found=수정할 {0} 을(를) 찾을 수 없음
api.operations.update.responses.error=서버 에러

api.operations.delete.summary={0} 삭제
api.operations.delete.description={0} 을(를) 삭제합니다.
api.operations.delete.responses.ok={0} 삭제 성공
api.operations.delete.responses.not_found=삭제할 {0} 을(를) 찾을 수 없음
api.operations.delete.responses.error=서버 에러
